/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.2 at Sun Mar 22 23:16:59 2015. */

#ifndef PB_VORTEX_PB_H_INCLUDED
#define PB_VORTEX_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _command_data_CommandType {
    command_data_CommandType_MOVE = 0,
    command_data_CommandType_TURN = 1,
    command_data_CommandType_STOP = 2
} command_data_CommandType;

/* Struct definitions */
typedef struct _command_data {
    bool has_command;
    command_data_CommandType command;
    pb_callback_t args;
} command_data;

typedef struct _sensor_data {
    pb_callback_t ir_data_array;
    pb_callback_t sonar_data_array;
    bool has_timestamp;
    uint32_t timestamp;
} sensor_data;

/* Default values for struct fields */
extern const command_data_CommandType command_data_command_default;

/* Initializer values for message structs */
#define sensor_data_init_default                 {{{NULL}, NULL}, {{NULL}, NULL}, false, 0}
#define command_data_init_default                {false, command_data_CommandType_STOP, {{NULL}, NULL}}
#define sensor_data_init_zero                    {{{NULL}, NULL}, {{NULL}, NULL}, false, 0}
#define command_data_init_zero                   {false, (command_data_CommandType)0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define command_data_command_tag                 1
#define command_data_args_tag                    2
#define sensor_data_ir_data_array_tag            1
#define sensor_data_sonar_data_array_tag         2
#define sensor_data_timestamp_tag                3

/* Struct field encoding specification for nanopb */
extern const pb_field_t sensor_data_fields[4];
extern const pb_field_t command_data_fields[3];

/* Maximum encoded size of messages (where known) */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
